{"version":3,"sources":["webpack:///./classes/Chip8.js","webpack:///./index.js","webpack:///webpack/bootstrap","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///webpack/runtime/make namespace object","webpack:///webpack/startup"],"names":["Chip8","screenHeight","screenWidth","display","Array","mem","ArrayBuffer","memory","Uint8Array","V","I","PC","stack","sp","delayTimer","soundTimer","keys","myChip8","console","log"],"mappings":";;;;;;;;;;;;;;AAAa;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;IAEMA,K,GACF,iBAAc;AAAA;;AACV;AACA;AACA,OAAKC,YAAL,GAAoB,EAApB;AACA,OAAKC,WAAL,GAAmB,EAAnB;AACA,OAAKC,OAAL,GAAe,IAAIC,KAAJ,CAAU,KAAKF,WAAL,GAAmB,KAAKD,YAAlC,CAAf;AAEA;AACR;AACA;AACA;AACA;AACA;AACA;AAEQ;AACA;;AACA,MAAMI,GAAG,GAAG,IAAIC,WAAJ,CAAgB,MAAhB,CAAZ;AACA,OAAKC,MAAL,GAAc,IAAIC,UAAJ,CAAeH,GAAf,CAAd,CAlBU,CAoBV;;AACA,OAAKI,CAAL,GAAS,IAAIL,KAAJ,CAAU,IAAV,CAAT,CArBU,CAsBV;;AACA,OAAKM,CAAL,GAAS,GAAT,CAvBU,CAwBV;;AACA,OAAKC,EAAL,GAAU,KAAV,CAzBU,CA2BV;AACA;AACA;;AACA,OAAKC,KAAL,GAAa,IAAIR,KAAJ,CAAU,IAAV,CAAb;AACA,OAAKS,EAAL,GAAU,GAAV,CA/BU,CAiCV;AACA;;AACA,OAAKC,UAAL,GAAkB,GAAlB;AACA,OAAKC,UAAL,GAAkB,GAAlB;AAEA,OAAKC,IAAL,GAAY,EAAZ;AACH,C;;AAGL,iEAAehB,KAAf,E;;;;;;;;;;;;ACxDa;;AAEb;AAEA,IAAMiB,OAAO,GAAG,IAAIjB,mDAAJ,EAAhB;AAEAkB,OAAO,CAACC,GAAR,CAAYF,OAAZ,E;;;;;;UCNA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCrBA;WACA;WACA;WACA;WACA,wCAAwC,yCAAyC;WACjF;WACA;WACA,E;;;;;WCPA,sF;;;;;WCAA;WACA;WACA;WACA,sDAAsD,kBAAkB;WACxE;WACA,+CAA+C,cAAc;WAC7D,E;;;;UCNA;UACA;UACA;UACA","file":"bundle.js","sourcesContent":["'use strict';\r\n\r\n/*\r\n * Author: Samuel Stidham\r\n * Project: Chip-8 Emulator\r\n * \r\n * I used the following websites when building this emulator (used them for reference):\r\n *  - http://www.multigesture.net/articles/how-to-write-an-emulator-chip-8-interpreter/\r\n *  - https://en.wikipedia.org/wiki/CHIP-8\r\n *  - http://devernay.free.fr/hacks/chip8/C8TECH10.HTM\r\n *  - http://www.multigesture.net/wp-content/uploads/mirror/goldroad/chip8_instruction_set.shtml\r\n */\r\n\r\nclass Chip8 {\r\n    constructor() {\r\n        // Configure the Display - The Chip-8 display area is a total of 2048 pixels (or 64 pixels wide by 32 pixels high). Each\r\n        // pixel of the display will be controlled by using an array.\r\n        this.screenHeight = 32;\r\n        this.screenWidth = 64;\r\n        this.display = new Array(this.screenWidth * this.screenHeight);\r\n\r\n        /* ##################\r\n         * ### MEMORY MAP ###\r\n         * ##################\r\n         * 0x000 - 0x1FF -> CHIP-8 Interpreter (Contains font set)\r\n         * 0X050 - 0x0A0 -> Used for the built in 4x5 poxel font set (0 - F)\r\n         * 0x200 - 0xFFF -> Program ROM and work RAM\r\n         */\r\n\r\n        // Configure the Memory - The length (or size) of an ArrayBuffer is measured in bytes. Chip-8 uses up to 4K bytes of memory.\r\n        // Convert the 4K bytes into an unsigned 8-bit integer array\r\n        const mem = new ArrayBuffer(0x1000);\r\n        this.memory = new Uint8Array(mem);\r\n\r\n        // The Chip-8 has 16 general purpose registers. The last is used for \"carry flag\"\r\n        this.V = new Array(0x10);\r\n        // The Chip-8 has an index register\r\n        this.I = 0x0;\r\n        // The Chip-8 has a program counter (pc) that starts at memory location 0x200\r\n        this.PC = 0x200;\r\n\r\n        // The system has 16 levels of stack. The stack is used to remember the current location of the program counter before\r\n        // jumping to another location or executing a subroutine. The stack pointer (sp) keeps track of which level of stack is being\r\n        // used\r\n        this.stack = new Array(0x10);\r\n        this.sp = 0x0;\r\n\r\n        // Chip-8 has two timers. They both count down at 60 hertz until they reach 0. The delay timer is used for timing events of games.\r\n        // It's value can be set and read. The sound timer is used for sound effects. When it's value is nonzero, a beeping sound is made.\r\n        this.delayTimer = 0x0;        \r\n        this.soundTimer = 0x0;\r\n\r\n        this.keys = {};\r\n    }\r\n}\r\n\r\nexport default Chip8;\r\n","'use strict';\r\n\r\nimport Chip8 from './classes/Chip8';\r\n\r\nconst myChip8 = new Chip8();\r\n\r\nconsole.log(myChip8);","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop)","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// startup\n// Load entry module\n__webpack_require__(\"./index.js\");\n// This entry module used 'exports' so it can't be inlined\n"],"sourceRoot":""}